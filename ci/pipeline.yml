---
jobs:
- name: bump
  serial: true
  plan:
  - in_parallel:
    - get: golang-1.19
      trigger: true
    - get: golang-1.18
      trigger: true
    - get: golang-release
    - get: stemcell
    - get: semver
      params:
        bump: minor
  - task: bump
    file: golang-release/ci/tasks/bump.yml
    params:
      PRIVATE_YML: |
        ---
        blobstore:
          options:
            access_key_id: ((bosh-packages-golang-release-uploader_aws_access_key.username))
            secret_access_key: ((bosh-packages-golang-release-uploader_aws_access_key.password))
  - task: test
    privileged: true
    file: golang-release/ci/tasks/test.yml
  - task: finalize
    file: golang-release/ci/tasks/finalize.yml
    params:
      PRIVATE_YML: |
        ---
        blobstore:
          options:
            access_key_id: ((bosh-packages-golang-release-uploader_aws_access_key.username))
            secret_access_key: ((bosh-packages-golang-release-uploader_aws_access_key.password))
  - in_parallel:
    - put: semver
      params:
        file: bumped-semver/version
    - put: golang-release
      params:
        rebase: true
        repository: finalized-release
        tag: version-tag/tag-name
        annotate: version-tag/annotate-msg

- name: build-docker-image
  plan:
  - get: golang-release
    trigger: true
  - put: golang-release-image
    params:
      build: "golang-release"
      dockerfile: "golang-release/ci/docker/golang-release/Dockerfile"
    get_params:
      skip_download: true
  - put: golang-release-security-scanner-image
    params:
      build: "golang-release"
      dockerfile: "golang-release/ci/docker/golang-release-security-scanner/Dockerfile"
    get_params:
      skip_download: true


resources:
- name: golang-release
  type: git
  source:
    uri: git@github.com:bosh-packages/golang-release
    branch: master
    private_key: ((github_deploy_key))

- name: golang-release-image
  type: docker-image
  source:
    repository: bosh/golang-release
    username: ((docker.username))
    password: ((docker.password))

- name: golang-release-security-scanner-image
  type: docker-image
  source:
    repository: bosh/golang-release-security-scanner
    username: ((docker.username))
    password: ((docker.password))

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-bionic-go_agent

- name: semver
  type: semver
  source:
    bucket: bosh-packages-golang-release
    key: version
    initial_version: 0.8.0
    access_key_id: ((bosh-packages-golang-release-uploader_aws_access_key.username))
    secret_access_key: ((bosh-packages-golang-release-uploader_aws_access_key.password))

- name: golang-1.18
  type: dynamic-metalink
  source:
    version: 1.18.x
    version_check: |
      curl -s https://go.dev/dl/?mode=json | jq -r '.[].version[2:]'
    metalink_get: |
      curl -s https://go.dev/dl/?mode=json | jq '
        map(select(.version[2:] == env.version)) | map({
          "files": (.files | map({
            "name": .filename,
            "size": .size,
            "urls": [ { "url": "https://dl.google.com/go/\(.filename)" } ],
            "hashes": [ { "type": "sha-256", "hash": .sha256 } ] } ) ) } )[]'
    include_files:
    - go*.linux-amd64.tar.gz
    - go*.windows-amd64.zip
    - go*.darwin-amd64.tar.gz

- name: golang-1.19
  type: dynamic-metalink
  source:
    version: 1.19.x
    version_check: |
      curl -s https://go.dev/dl/?mode=json | jq -r '.[].version[2:]'
    metalink_get: |
      curl -s https://go.dev/dl/?mode=json | jq '
        map(select(.version[2:] == env.version)) | map({
          "files": (.files | map({
            "name": .filename,
            "size": .size,
            "urls": [ { "url": "https://dl.google.com/go/\(.filename)" } ],
            "hashes": [ { "type": "sha-256", "hash": .sha256 } ] } ) ) } )[]'
    include_files:
    - go*.linux-amd64.tar.gz
    - go*.windows-amd64.zip
    - go*.darwin-amd64.tar.gz

resource_types:
- name: dynamic-metalink
  type: docker-image
  source:
    repository: dpb587/dynamic-metalink-resource
